<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevpntuijian.github.io/news/article-81268.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>二、Kotlin标准函数和静态函数</title>
        <meta name="description" content="1、标准函数with、run和apply let : 函数，配合?.进行辅助判空处理 with :  连续调用同一个对象的多个方法，让代码变得更加简洁   val list = listOfNotNu" />
        <link rel="icon" href="/assets/website/img/vergeclash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="免费VPN推荐 推荐免费VPN节点订阅中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevpntuijian.github.io/news/article-81268.htm" />
    <meta property="og:site_name" content="免费VPN推荐 推荐免费VPN节点订阅中文网" />
    <meta property="og:title" content="二、Kotlin标准函数和静态函数" />
    <meta property="og:image" content="https://freevpntuijian.github.io/uploads/20240822/47cb145c759aa097dadff71eb8ff93c7.webp" />
        <meta property="og:release_date" content="2025-03-25T08:19:56" />
    <meta property="og:updated_time" content="2025-03-25T08:19:56" />
        <meta property="og:description" content="1、标准函数with、run和apply let : 函数，配合?.进行辅助判空处理 with :  连续调用同一个对象的多个方法，让代码变得更加简洁   val list = listOfNotNu" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="二、Kotlin标准函数和静态函数">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Poppins:400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto:400,400i,500,500i,700,700i,900,900i&display=swap" rel="stylesheet">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/fontawesome-all.min.css">
    <!-- flaticon css -->
    <link rel="stylesheet" href="/assets/website/fonts/vergeclash/flaticon.css">
    <!-- magnific popup -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/magnific-popup.css">
    <!-- nice-select css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/nice-select.css">
    <!-- bootstrap css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/bootstrap.min.css">
    <!-- swipper css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/swiper.min.css">
    <!-- animate.css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/animate.css">
    <!-- main style css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FLK9PDHYGR"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FLK9PDHYGR');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div><!-- /preloader-icon -->
        </div><!-- /preloader-inner -->
    </div><!-- /preloader -->
    <!-- header-section start -->
    <header class="header-section">
        <div class="header">
            <div class="header-bottom-area">
                <div class="container">
                    <nav class="navbar navbar-expand-lg p-0">
                        <a class="site-logo site-title" href="/">
                                                <span>免费VPN推荐</span>
                                                </a>
                        <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="fas fa-bars"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav main-menu ml-auto">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- header-section end -->
    <!-- inner-banner-section start -->
    <section class="inner-banner-section bg-overlay-main-two bg_img" data-background="assets/images/bg-3.jpg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center">
                    <div class="inner-banner-content">
                        <h1 class="title wow fade-in-up" data-wow-duration="1s" data-wow-delay="0.5s">二、Kotlin标准函数和静态函数</h1>
                        <div class="breadcrumb-area wow fade-in-bottom" data-wow-duration="1s" data-wow-delay="0.5s">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- inner-banner-section end -->
    
    <a href="#" class="scrollToTop"><i class="fas fa-angle-up"></i></a>
    <!-- about-section start -->
    <section class="about-section pd-t-120 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h4> <a id="1withrunapply_0" rel="nofollow"></a>1、标准函数with、run和apply</h4> <pre><code>let : 函数，配合?.进行辅助判空处理 with :  连续调用同一个对象的多个方法，让代码变得更加简洁 </code></pre> <pre><code class="prism language-kotlin"> <span class="token keyword">val</span> list <span class="token operator">=</span> <span class="token function">listOfNotNull</span><span class="token punctuation">(</span><span class="token string">"apple"</span><span class="token punctuation">,</span><span class="token string">"banana"</span><span class="token punctuation">,</span><span class="token string">"orange"</span><span class="token punctuation">,</span><span class="token string">"li"</span><span class="token punctuation">)</span>     <span class="token comment">//正常处理</span>     <span class="token keyword">val</span> stringBuilder <span class="token operator">=</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit.\n"</span><span class="token punctuation">)</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> list<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".\n"</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     stringBuilder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit end.\n"</span><span class="token punctuation">)</span>     <span class="token keyword">val</span> result <span class="token operator">=</span> stringBuilder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>     <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"------------------------with----------------------------"</span><span class="token punctuation">)</span>     <span class="token comment">//with函数</span>     <span class="token keyword">val</span> results <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span><span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit.\n"</span><span class="token punctuation">)</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> list<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".\n"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit end.\n"</span><span class="token punctuation">)</span>         <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span> </code></pre> <pre><code>run : 和with用法场景非常类似 </code></pre> <pre><code class="prism language-kotlin">  <span class="token keyword">val</span> result1 <span class="token operator">=</span> <span class="token function">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span> <span class="token punctuation">{<!-- --></span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit.\n"</span><span class="token punctuation">)</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> list<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".\n"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit end.\n"</span><span class="token punctuation">)</span>         <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> </code></pre> <pre><code>apply:和run类似，在对象上调用，只能有一个Lambda表达式，也会在Lambda表达式中提供调用对象的上下文，无法指定返回值 </code></pre> <pre><code class="prism language-kotlin">    <span class="token keyword">val</span> result2 <span class="token operator">=</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{<!-- --></span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit.\n"</span><span class="token punctuation">)</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> list<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">".\n"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"start eat fruit end.\n"</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>     <span class="token function">println</span><span class="token punctuation">(</span>result2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <pre><code>Android中跳转使用 </code></pre> <pre><code class="prism language-kotlin">    <span class="token keyword">companion</span> <span class="token keyword">object</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">fun</span> <span class="token function">gotoActivity</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context <span class="token punctuation">,</span> <span class="token keyword">data</span> <span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token keyword">val</span>  intent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>SecondActivity <span class="token operator">::</span> <span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{<!-- --></span>                  <span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data1"</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">)</span>                 <span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data2"</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">)</span>                 <span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data3"</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">)</span>                 <span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data4"</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">)</span>                 <span class="token function">putExtra</span><span class="token punctuation">(</span><span class="token string">"data5"</span><span class="token punctuation">,</span><span class="token keyword">data</span><span class="token punctuation">)</span>             <span class="token punctuation">}</span>             context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <h4> <a id="2_71" rel="nofollow"></a>2、静态方法</h4> <pre><code>静态方法又叫类方法，是那种不用创建实例就能调用的方法，在java中，用static修饰的方法就是静态方法，在Kotlin中，如果是定义工具类，就建议使用单例类来实现相关方法 </code></pre> <pre><code class="prism language-kotlin"><span class="token keyword">object</span> Utils <span class="token punctuation">{<!-- --></span>     <span class="token keyword">fun</span> <span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态方法"</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span>   <span class="token comment">//调用</span>    Utils<span class="token punctuation">.</span><span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre> <pre><code>因为使用单例类，会使所有的方法变成静态方法，如果一个类中只需要一个方法变成单例模式，需要在这个方法外面包companion object这个函数，就实现单例类了 </code></pre> <pre><code class="prism language-kotlin">    <span class="token keyword">companion</span> <span class="token keyword">object</span><span class="token punctuation">{<!-- --></span>         <span class="token keyword">fun</span> <span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态方法"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <pre><code>companion object这个关键字会在类中内部创建一个伴生类，而doAction就是定义在伴生类里面的实例方法。所以，kotlin中没有直接定义静态方法的关键字，但是提供了一些语法特性来支持类似静态方法的调用的写法 </code></pre> <h4> <a id="3_96" rel="nofollow"></a>3、静态方法实现</h4> <pre><code>两种方式;注解和顶层方法 1）注解 上述的方法，都无法在java中以静态方法方式调用，如果在 companion object中的静态方法上加上@JvmStatic注解，kotlin编译器就能编译成真正的静态方法 </code></pre> <pre><code class="prism language-kotlin">	<span class="token comment">// @JvmStatic 只能加载单例类和companion object的方法上，如果加在普通方法上，会报错</span>     <span class="token keyword">companion</span> <span class="token keyword">object</span><span class="token punctuation">{<!-- --></span>         <span class="token annotation builtin">@JvmStatic</span>         <span class="token keyword">fun</span> <span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态方法"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> </code></pre> <pre><code>2）顶层方法 	直接创建File类，在里面定义方法 	New--Kotlin--输入类名--选择File--OK </code></pre> <pre><code class="prism language-kotlin"> <span class="token keyword">fun</span> <span class="token function">doAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态方法"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">fun</span> <span class="token function">doAction1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>     <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"静态方法"</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <pre><code>在Kotlin方法中，直接可以调用，在java中，需要类名.方法调用 </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-81267.htm">springboot post接口接受json时，转换为对象时，属性都为null</a></p>
                                        <p>下一个：<a href="/news/article-81926.htm">C++编程——C++对象模型和this指针</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-24-free-v2ray-subscribe.htm" title="免费VPN推荐 | 3月24日19.1M/S|免费SSR/V2ray/Shadowrocket/Clash订阅节点地址">免费VPN推荐 | 3月24日19.1M/S|免费SSR/V2ray/Shadowrocket/Clash订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-81267.htm" title="springboot post接口接受json时，转换为对象时，属性都为null">springboot post接口接受json时，转换为对象时，属性都为null</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-clash-v2ray-ss-ssr.htm" title="免费VPN推荐 | 3月25日22.2M/S|免费Shadowrocket/SSR/Clash/V2ray订阅节点地址">免费VPN推荐 | 3月25日22.2M/S|免费Shadowrocket/SSR/Clash/V2ray订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-81268.htm" title="二、Kotlin标准函数和静态函数">二、Kotlin标准函数和静态函数</a></li>
                        <li class="py-2"><a href="/news/article-81927.htm" title="兽医资格证自考需要什么条件怎么报名（自学兽医考证）">兽医资格证自考需要什么条件怎么报名（自学兽医考证）</a></li>
                        <li class="py-2"><a href="/news/article-81926.htm" title="C++编程——C++对象模型和this指针">C++编程——C++对象模型和this指针</a></li>
                        <li class="py-2"><a href="/news/article-80071.htm" title="兽医打疫苗简报 兽医打疫苗简报怎么写">兽医打疫苗简报 兽医打疫苗简报怎么写</a></li>
                        <li class="py-2"><a href="/news/article-80521.htm" title="同城免费领养宠物的软件叫什么 同城免费领养宠物的软件叫什么名字">同城免费领养宠物的软件叫什么 同城免费领养宠物的软件叫什么名字</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-23-node-share.htm" title="免费VPN推荐 | 3月23日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点地址">免费VPN推荐 | 3月23日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-26-free-v2ray-subscribe.htm" title="免费VPN推荐 | 3月26日20.9M/S|免费Shadowrocket/Clash/V2ray/SSR订阅节点地址">免费VPN推荐 | 3月26日20.9M/S|免费Shadowrocket/Clash/V2ray/SSR订阅节点地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- about-section end -->

        <div class="privacy-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">免费VPN推荐 推荐免费VPN节点订阅中文网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- footer-section end -->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-3.3.1.min.js"></script>
    <!-- migarate-jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-migrate-3.0.0.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/vergeclash/bootstrap.min.js"></script>
    <!-- magnific-popup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.magnific-popup.js"></script>
    <!-- isotope -->
    <script src="/assets/website/js/frontend/vergeclash/isotope.pkgd.min.js"></script>
    <!-- nice-select js-->
    <script src="/assets/website/js/frontend/vergeclash/jquery.nice-select.js"></script>
    <!-- swipper js -->
    <script src="/assets/website/js/frontend/vergeclash/swiper.min.js"></script>
    <!-- waypoints js link -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.waypoints.min.js"></script>
    <!-- counterup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.counterup.min.js"></script>
    <!--typed js-->
    <script src="/assets/website/js/frontend/vergeclash/typed.js"></script>
    <!-- wow js file -->
    <script src="/assets/website/js/frontend/vergeclash/wow.min.js"></script>
    <!-- main -->
    <script src="/assets/website/js/frontend/vergeclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>