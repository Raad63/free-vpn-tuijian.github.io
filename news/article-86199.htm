<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freevpntuijian.github.io/news/article-86199.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Spring Security实现基于RBAC的权限表达式动态访问控制</title>
        <meta name="description" content="昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Securit" />
        <link rel="icon" href="/assets/website/img/vergeclash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="免费VPN推荐 推荐免费VPN节点订阅中文网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freevpntuijian.github.io/news/article-86199.htm" />
    <meta property="og:site_name" content="免费VPN推荐 推荐免费VPN节点订阅中文网" />
    <meta property="og:title" content="Spring Security实现基于RBAC的权限表达式动态访问控制" />
    <meta property="og:image" content="https://freevpntuijian.github.io/uploads/20240822/4df8f147ee4cb483cf7dfe94db9f3ef1.webp" />
        <meta property="og:release_date" content="2025-04-01T09:49:15" />
    <meta property="og:updated_time" content="2025-04-01T09:49:15" />
        <meta property="og:description" content="昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Securit" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Security实现基于RBAC的权限表达式动态访问控制">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Poppins:400,400i,500,500i,600,600i,700,700i,800,800i,900,900i|Roboto:400,400i,500,500i,700,700i,900,900i&display=swap" rel="stylesheet">
    <!-- fontawesome css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/fontawesome-all.min.css">
    <!-- flaticon css -->
    <link rel="stylesheet" href="/assets/website/fonts/vergeclash/flaticon.css">
    <!-- magnific popup -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/magnific-popup.css">
    <!-- nice-select css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/nice-select.css">
    <!-- bootstrap css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/bootstrap.min.css">
    <!-- swipper css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/swiper.min.css">
    <!-- animate.css -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/animate.css">
    <!-- main style css link -->
    <link rel="stylesheet" href="/assets/website/css/vergeclash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FLK9PDHYGR"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FLK9PDHYGR');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="preloader">
        <div class="preloader-inner">
            <div class="preloader-icon">
                <span></span>
                <span></span>
            </div><!-- /preloader-icon -->
        </div><!-- /preloader-inner -->
    </div><!-- /preloader -->
    <!-- header-section start -->
    <header class="header-section">
        <div class="header">
            <div class="header-bottom-area">
                <div class="container">
                    <nav class="navbar navbar-expand-lg p-0">
                        <a class="site-logo site-title" href="/">
                                                <span>免费VPN推荐</span>
                                                </a>
                        <button class="navbar-toggler ml-auto" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="fas fa-bars"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarSupportedContent">
                            <ul class="navbar-nav main-menu ml-auto">
                                                                <li><a href="/">首页</a></li>
                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                <li><a href="/client.htm">客户端</a></li>
                                                            </ul>
                        </div>
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- header-section end -->
    <!-- inner-banner-section start -->
    <section class="inner-banner-section bg-overlay-main-two bg_img" data-background="assets/images/bg-3.jpg">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-12 text-center">
                    <div class="inner-banner-content">
                        <h1 class="title wow fade-in-up" data-wow-duration="1s" data-wow-delay="0.5s">Spring Security实现基于RBAC的权限表达式动态访问控制</h1>
                        <div class="breadcrumb-area wow fade-in-bottom" data-wow-duration="1s" data-wow-delay="0.5s">
                            <nav aria-label="breadcrumb">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item"><a href="/">首页</a></li>
                                    <li class="breadcrumb-item"><a href="/news/">新闻资讯</a></li>
                                    <li class="breadcrumb-item active" aria-current="page">正文</li>
                                </ol>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- inner-banner-section end -->
    
    <a href="#" class="scrollToTop"><i class="fas fa-angle-up"></i></a>
    <!-- about-section start -->
    <section class="about-section pd-t-120 py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<p>昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Security中我并没有使用过它，不过我认为Spring Security可以实现这一点。是的，我找到了实现它的方法。</p> <h3 id="资源权限表达式">资源权限表达式</h3> <p>说了这么多，我觉得应该解释一下什么叫资源权限表达式。权限控制的核心就是清晰地表达出特定资源的某种操作，一个格式良好好的权限声明可以清晰表达出用户对该资源拥有的操作权限。</p> <p>通常一个资源在系统中的标识是唯一的，比如<strong>User</strong>用来标识用户，<strong>ORDER</strong>标识订单。不管什么资源大都可以归纳出以下这几种操作</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1cc8c293aa89190e1ee0e7cc62d550d2.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>在 shiro权限声明通常对上面的这种资源操作关系用冒号分隔的方式进行表示。例如读取用户信息的操作表示为<code>USER:READ</code>，甚至还可以更加细一些，用<code>USER:READ:123</code>表示读取<strong>ID</strong>为<code>123</code>的用户权限。</p> <p>资源操作定义好了，再把它和角色关联起来不就是基于RBAC的权限资源控制了吗？就像下面这样：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2af86d5f5db3c9aa8722995ad3afd257.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>这样资源和角色的关系可以进行CRUD操作进行动态绑定。</p> <h3 id="spring-security中的实现">Spring Security中的实现</h3> <p>资源权限表达式动态权限控制在Spring Security也是可以实现的。首先开启方法级别的注解安全控制。</p> <pre><code class="language-java">/**  * 开启方法安全注解  *  * @author felord.cn  */ @EnableGlobalMethodSecurity(prePostEnabled = true,         securedEnabled = true,         jsr250Enabled = true) public class MethodSecurityConfig {      }</code></pre> <h4 id="methodsecurityexpressionhandler">MethodSecurityExpressionHandler</h4> <p><code>MethodSecurityExpressionHandler</code> 提供了一个对方法进行安全访问的门面扩展。它的实现类<code>DefaultMethodSecurityExpressionHandler</code>更是提供了针对方法的一系列扩展接口，这里我总结了一下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/69fd01e989f655213d98dc3a54c4a116.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>这里的<code>PermissionEvaluator</code>正好可以满足需要。</p> <h5 id="permissionevaluator">PermissionEvaluator</h5> <p><code>PermissionEvaluator</code> 接口抽象了对一个用户是否有权限访问一个特定的领域对象的评估过程。</p> <pre><code class="language-java">public interface PermissionEvaluator extends AopInfrastructureBean {    	boolean hasPermission(Authentication authentication,                            Object targetDomainObject, Object permission);    	boolean hasPermission(Authentication authentication,                            Serializable targetId, String targetType, Object permission);  }</code></pre> <p>这两个方法仅仅参数列表不同，这些参数的含义为：</p> <ul> <li><code>authentication</code> 当前用户的认证信息，持有当前用户的角色权限。</li> <li><code>targetDomainObject</code> 用户想要访问的目标领域对象，例如上面的<code>USER</code>。</li> <li><code>permission</code> 这个当前方法设定的目标领域对象的权限，例如上面的<code>READ</code>。</li> <li><code>targetId</code> 这种是对上面<code>targetDomainObject</code> 的具体化，比如ID为<code>123</code>的<code>USER</code>，我觉得还可以搞成租户什么的。</li> <li><code>targetType</code> 是为了配合<code>targetId</code> 。</li> </ul> <blockquote> <p>第一个方法是用来实现<code>USER:READ</code>的；第二个方法是用来实现<code>USER:READ:123</code>的。</p> </blockquote> <h4 id="思路以及实现">思路以及实现</h4> <p><code>targetDomainObject:permission</code>不就是<code>USER:READ</code>的抽象吗？只要找出<code>USER:READ</code>对应的角色集合，和当前用户持有的角色进行比对，它们存在交集就证明用户有权限访问。借着这个思路胖哥实现了一个<code>PermissionEvaluator</code>:</p> <pre><code class="language-java">/**  * 资源权限评估  *   * @author felord.cn  */ public class ResourcePermissionEvaluator implements PermissionEvaluator {     private final BiFunction&lt;String, String, Collection&lt;? extends GrantedAuthority&gt;&gt; permissionFunction;      public ResourcePermissionEvaluator(BiFunction&lt;String, String, Collection&lt;? extends GrantedAuthority&gt;&gt; permissionFunction) {         this.permissionFunction = permissionFunction;     }      @Override     public boolean hasPermission(Authentication authentication, Object targetDomainObject, Object permission) {         //查询方法标注对应的角色         Collection&lt;? extends GrantedAuthority&gt; resourceAuthorities = permissionFunction.apply((String) targetDomainObject, (String) permission);         // 用户对应的角色         Collection&lt;? extends GrantedAuthority&gt; userAuthorities = authentication.getAuthorities();          // 对比 true 就能访问  false 就不能访问         return userAuthorities.stream().anyMatch(resourceAuthorities::contains);     }      @Override     public boolean hasPermission(Authentication authentication, Serializable targetId, String targetType, Object permission) {         //todo         System.out.println("targetId = " + targetId);         return true;     } }</code></pre> <blockquote> <p>第二个方法没有实现，因为两个差不多，第二个你可以想想具体的使用场景。</p> </blockquote> <h4 id="配置和使用">配置和使用</h4> <p><code>PermissionEvaluator</code> 需要注入到<strong>Spring IoC</strong>，并且<strong>Spring IoC</strong>只能有一个该类型的<strong>Bean</strong>：</p> <pre><code class="language-java">    @Bean     PermissionEvaluator resourcePermissionEvaluator() {         return new ResourcePermissionEvaluator((targetDomainObject, permission) -&gt; {             //TODO 这里形式其实可以不固定             String key = targetDomainObject + ":" + permission;             //TODO  查询 key 和  authority 的关联关系             //  模拟 permission 关联角色   根据key 去查 grantedAuthorities             Set&lt;SimpleGrantedAuthority&gt; grantedAuthorities = new HashSet&lt;&gt;();             grantedAuthorities.add(new SimpleGrantedAuthority("ROLE_ADMIN"));             return "USER:READ".equals(key) ? grantedAuthorities : new HashSet&lt;&gt;();         });     }</code></pre> <p>接下来写个接口，用<code>@PreAuthorize</code>注解标记，然后直接用<code>hasPermission('USER','READ')</code>来静态绑定该接口的访问权限表达式：</p> <pre><code class="language-java">    @GetMapping("/postfilter")     @PreAuthorize("hasPermission('USER','READ')")     public Collection&lt;String&gt; postfilter(){         List&lt;String&gt; list = new ArrayList&lt;&gt;();         list.add("felord.cn");         list.add("码农小胖哥");         list.add("请关注一下");         return list;     }</code></pre> <p>然后定义一个用户：</p> <pre><code class="language-java">    @Bean     UserDetailsService users() {         UserDetails user = User.builder()                 .username("felord")                 .password("123456")       .passwordEncoder(PasswordEncoderFactories.createDelegatingPasswordEncoder()::encode)                 .roles("USER")                 .authorities("ROLE_ADMIN","ROLE_USER")                 .build();         return new InMemoryUserDetailsManager(user);     }</code></pre> <p>接下来肯定是正常能够访问接口的。当你改变了<code>@PreAuthorize</code>中表达式的值或者移除了用户的<code>ROLE_ADMIN</code>权限，再或者<code>USER:READ</code>关联到了其它角色等等，都会返回<code>403</code>。</p> <h5 id="留给你去测试的">留给你去测试的</h5> <p>你可以看看注解改成这样会是什么效果：</p> <pre><code>  @PreAuthorize("hasPermission('1234','USER','READ')")</code></pre> <p>还有这个：</p> <pre><code class="language-java">  @PreAuthorize("hasPermission('USER','READ') or hasRole('ADMIN')")</code></pre> <p>或者让<code>targetId</code>动态化：</p> <pre><code class="language-java">    @PreAuthorize("hasPermission(#id,'USER','READ')")     public Collection&lt;String&gt; postfilter(String id){              }</code></pre> <p></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-86198.htm">SpringCloud Sleuth 分布式请求链路追踪</a></p>
                                        <p>下一个：<a href="/news/article-86914.htm">深入理解mmap&#8211;内核代码分析及驱动demo示例</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-80522.htm" title="20-30岁男士手表(男款腕表品牌)">20-30岁男士手表(男款腕表品牌)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-28-free-high-speed-nodes.htm" title="免费VPN推荐 | 3月28日20.9M/S|免费Clash/Shadowrocket/SSR/V2ray订阅节点地址">免费VPN推荐 | 3月28日20.9M/S|免费Clash/Shadowrocket/SSR/V2ray订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-84056.htm" title="猫最忌讳的三个属相（有些人命里不能养猫）">猫最忌讳的三个属相（有些人命里不能养猫）</a></li>
                        <li class="py-2"><a href="/news/article-81927.htm" title="兽医资格证自考需要什么条件怎么报名（自学兽医考证）">兽医资格证自考需要什么条件怎么报名（自学兽医考证）</a></li>
                        <li class="py-2"><a href="/news/article-83321.htm" title="动物疫苗生产厂家排名前十名有哪些呢 动物疫苗生产厂家排名前十名有哪些呢图片">动物疫苗生产厂家排名前十名有哪些呢 动物疫苗生产厂家排名前十名有哪些呢图片</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-23-node-share.htm" title="免费VPN推荐 | 3月23日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点地址">免费VPN推荐 | 3月23日21.3M/S|免费SSR/V2ray/Clash/Shadowrocket订阅节点地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-free-high-speed-nodes.htm" title="免费VPN推荐 | 3月27日21.8M/S|免费Clash/SSR/V2ray/Shadowrocket订阅节点地址">免费VPN推荐 | 3月27日21.8M/S|免费Clash/SSR/V2ray/Shadowrocket订阅节点地址</a></li>
                        <li class="py-2"><a href="/news/article-84055.htm" title="@RequestMapping注解最详细解析">@RequestMapping注解最详细解析</a></li>
                        <li class="py-2"><a href="/news/article-83320.htm" title="JavaScript如何使用过滤器从数组中删除元素">JavaScript如何使用过滤器从数组中删除元素</a></li>
                        <li class="py-2"><a href="/news/article-86915.htm" title="宠物店一个月能卖多少狗粮啊 宠物店一个月能卖多少狗粮啊视频">宠物店一个月能卖多少狗粮啊 宠物店一个月能卖多少狗粮啊视频</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- about-section end -->

        <div class="privacy-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">免费VPN推荐 推荐免费VPN节点订阅中文网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </div>
    <!-- footer-section end -->
    <!-- jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-3.3.1.min.js"></script>
    <!-- migarate-jquery -->
    <script src="/assets/website/js/frontend/vergeclash/jquery-migrate-3.0.0.js"></script>
    <!-- bootstrap js -->
    <script src="/assets/website/js/frontend/vergeclash/bootstrap.min.js"></script>
    <!-- magnific-popup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.magnific-popup.js"></script>
    <!-- isotope -->
    <script src="/assets/website/js/frontend/vergeclash/isotope.pkgd.min.js"></script>
    <!-- nice-select js-->
    <script src="/assets/website/js/frontend/vergeclash/jquery.nice-select.js"></script>
    <!-- swipper js -->
    <script src="/assets/website/js/frontend/vergeclash/swiper.min.js"></script>
    <!-- waypoints js link -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.waypoints.min.js"></script>
    <!-- counterup js -->
    <script src="/assets/website/js/frontend/vergeclash/jquery.counterup.min.js"></script>
    <!--typed js-->
    <script src="/assets/website/js/frontend/vergeclash/typed.js"></script>
    <!-- wow js file -->
    <script src="/assets/website/js/frontend/vergeclash/wow.min.js"></script>
    <!-- main -->
    <script src="/assets/website/js/frontend/vergeclash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>